package com.alura.forohub.security; import com.alura.forohub.domain.usuario.Usuario; import io.jsonwebtoken.*; import io.jsonwebtoken.io.Decoders; import io.jsonwebtoken.security.Keys; import org.springframework.beans.factory.annotation.Value; import org.springframework.stereotype.Service; import java.security.Key; import java.util.*; import java.util.function.Function; @Service public class JwtTokenService { @Value("${security.jwt.secret}") private String secret; @Value("${security.jwt.expiration}") private long expiration; private Key getSigningKey(){ byte[] kb; try{kb=Decoders.BASE64.decode(secret);}catch(IllegalArgumentException e){kb=secret.getBytes();} return Keys.hmacShaKeyFor(kb);} public String generateToken(Usuario user){ Date now=new Date(); Date exp=new Date(now.getTime()+expiration); return Jwts.builder().setSubject(user.getUsername()).setIssuedAt(now).setExpiration(exp).signWith(getSigningKey(), SignatureAlgorithm.HS256).compact(); } public String extractUsername(String token){ return extractClaim(token, Claims::getSubject);} public <T> T extractClaim(String token, java.util.function.Function<Claims,T> resolver){ Claims c=Jwts.parserBuilder().setSigningKey(getSigningKey()).build().parseClaimsJws(token).getBody(); return resolver.apply(c);} }