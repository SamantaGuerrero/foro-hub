package com.alura.forohub.controller; import com.alura.forohub.domain.usuario.*; import com.alura.forohub.dto.auth.*; import com.alura.forohub.repository.UsuarioRepository; import com.alura.forohub.security.JwtTokenService; import jakarta.validation.Valid; import org.springframework.http.ResponseEntity; import org.springframework.security.authentication.*; import org.springframework.security.crypto.password.PasswordEncoder; import org.springframework.web.bind.annotation.*; @RestController @RequestMapping("/auth") public class AuthController { private final AuthenticationManager am; private final JwtTokenService jwt; private final UsuarioRepository repo; private final PasswordEncoder encoder; public AuthController(AuthenticationManager am, JwtTokenService jwt, UsuarioRepository repo, PasswordEncoder encoder){ this.am=am; this.jwt=jwt; this.repo=repo; this.encoder=encoder; } @PostMapping("/login") public ResponseEntity<TokenResponse> login(@RequestBody @Valid LoginRequest req){ am.authenticate(new UsernamePasswordAuthenticationToken(req.getEmail(), req.getPassword())); var user=repo.findByEmail(req.getEmail()).orElseThrow(); return ResponseEntity.ok(new TokenResponse(jwt.generateToken(user))); } @PostMapping("/register") public ResponseEntity<?> register(@RequestBody Usuario u){ u.setPassword(encoder.encode(u.getPassword())); if(u.getRole()==null) u.setRole(Role.USER); repo.save(u); return ResponseEntity.ok().build(); } }