package com.alura.forohub.controller; import com.alura.forohub.domain.topico.Topico; import com.alura.forohub.domain.usuario.Usuario; import com.alura.forohub.dto.topico.*; import com.alura.forohub.service.TopicoService; import jakarta.validation.Valid; import org.springframework.http.ResponseEntity; import org.springframework.security.core.annotation.AuthenticationPrincipal; import org.springframework.web.bind.annotation.*; import java.net.URI; import java.util.*; @RestController @RequestMapping("/topicos") public class TopicoController { private final TopicoService service; public TopicoController(TopicoService s){this.service=s;} @GetMapping public ResponseEntity<List<TopicoResponseDTO>> listar(){ return ResponseEntity.ok(service.listar()); } @GetMapping("/{id}") public ResponseEntity<TopicoResponseDTO> obtener(@PathVariable Long id){ return ResponseEntity.ok(service.obtener(id)); } @PostMapping public ResponseEntity<TopicoResponseDTO> crear(@RequestBody @Valid CreateTopicoDTO dto, @AuthenticationPrincipal Usuario usuario){ Topico creado=service.crear(dto, usuario); var body=service.obtener(creado.getId()); return ResponseEntity.created(URI.create("/topicos/"+creado.getId())).body(body); } @PutMapping("/{id}") public ResponseEntity<TopicoResponseDTO> actualizar(@PathVariable Long id, @RequestBody @Valid UpdateTopicoDTO dto){ Topico actualizado=service.actualizar(id, dto); return ResponseEntity.ok(service.obtener(actualizado.getId())); } @DeleteMapping("/{id}") public ResponseEntity<Void> eliminar(@PathVariable Long id){ service.eliminar(id); return ResponseEntity.noContent().build(); } }